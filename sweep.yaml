program: main.py
command:
  - ${env}
  - ${interpreter}
  - -O
  - ${program}
  - ${args}
metric:
  name: population/mean_f1
  goal: maximize
method: bayes
parameters:
  criterion_key:
    value: 'bce'
  general_model_config:
    parameters:
      patch_size:
        value: 8
      dim:
        values: [ 128, 256 ]
      depth:
        values: [ 1, 2, 3, 4 ]
      heads:
        values: [ 1, 2, 3, 4 ]
      mlp_dim:
        values: [ 128, 256, 512 ]
      dropout:
        min: 0.05
        max: 0.25
        # value: 0.16
      emb_dropout:
        min: 0.05
        max: 0.25
        # value: 0.15
  pretrain:
    parameters:
      epochs:
        values: [ 10, 20, 30 ]
      batch_size:
        value: [ 16, 32, 64 ]
      lr:
        distribution: log_uniform_values
        min: 0.0001
        max: 0.005
      train_fraction:
        value: 0.7
      # do_pretraining:
      #   values: [ True, False ]
  finetune:
    parameters:
      n_frozen_layers:
        value: 1
      num_episodes:
        value: 10
      epochs:
        value: 15
      lr:
        # value: 0.0005
        distribution: log_uniform_values
        min: 0.0001
        max: 0.005
      batch_size:
        value: 16
      # do_finetuning:
        # values: [ True, False ]
  online:
    parameters:
      num_episodes:
        value: 30
        # values: [ 0, 30 ]
      batch_size:
        values: [ 1, 8, 16 ]
      epochs:
        values: [ 10, 15, 20, 25, 30 ]
      lr:
        # value: 0.0005
        distribution: log_uniform_values
        min: 0.0001
        max: 0.001
      num_sessions:
        value: 3
      n_frozen_layers:
        value: 0
      train_intervals:
        values: [ 1, 3, 5, 7 ]
      first_training_episode:
        value: 0
      additional_train_episodes:
        values: [ 5, 10 ]
      adaptive_training:
        values: [ True, False ]
      balance_classes:
        values: [ True, False ]
      buffer_size:
        values: [ 2_000, 3_000, 4_000 ]
